digraph "CallGraph" {
    node [shape=box];
    node_13 [label="inline fun contractAddress(s: StateInit): Address"];
    node_15 [label="fun send(params: SendParameters): Int"];
    node_17 [label="init(owner: Address, content: Cell, max_supply: Int)
[StateWrite]"];
    node_18 [label="receive(msg: Mint)
[StateRead]"];
    node_19 [label="receive('Mint: 100')
[StateRead]"];
    node_20 [label="receive('Owner: MintClose')
[StateRead,StateWrite]"];
    node_21 [label="init(master: Address, owner: Address)
[StateWrite]"];
    node_22 [label="receive(msg: TokenTransfer)
[Send,StateRead,StateWrite]"];
    node_23 [label="receive(msg: TokenTransferInternal)
[Send,StateRead,StateWrite]"];
    node_24 [label="get fun msgValue(value: Int): Int
[StateRead]"];
    node_25 [label="receive(msg: TokenBurn)
[Send,StateRead,StateWrite]"];
    node_26 [label="bounced(msg: Slice)
[StateWrite]"];
    node_27 [label="get fun get_wallet_data(): JettonWalletData
[StateRead]"];
    node_28 [label="context"];
    node_29 [label="require"];
    node_30 [label="mint"];
    node_31 [label="ctx::readForwardFee"];
    node_32 [label="min"];
    node_33 [label="ton"];
    node_34 [label="toCell"];
    node_35 [label="msgValue"];
    node_36 [label="myBalance"];
    node_37 [label="msg::loadUint"];
    node_38 [label="msg::loadCoins"];
    node_18 -> node_28;
    node_18 -> node_29;
    node_18 -> node_29;
    node_18 -> node_30;
    node_19 -> node_28;
    node_19 -> node_29;
    node_19 -> node_30;
    node_20 -> node_28;
    node_20 -> node_29;
    node_22 -> node_28;
    node_22 -> node_29;
    node_22 -> node_31;
    node_22 -> node_31;
    node_22 -> node_29;
    node_22 -> node_32;
    node_22 -> node_33;
    node_22 -> node_29;
    node_22 -> node_13;
    node_22 -> node_15;
    node_22 -> node_34;
    node_23 -> node_28;
    node_23 -> node_29;
    node_23 -> node_13;
    node_23 -> node_29;
    node_23 -> node_15;
    node_23 -> node_34;
    node_23 -> node_35;
    node_23 -> node_31;
    node_23 -> node_15;
    node_23 -> node_34;
    node_24 -> node_36;
    node_24 -> node_32;
    node_25 -> node_28;
    node_25 -> node_29;
    node_25 -> node_29;
    node_25 -> node_31;
    node_25 -> node_29;
    node_25 -> node_15;
    node_25 -> node_34;
    node_26 -> node_37;
    node_26 -> node_37;
    node_26 -> node_38;
    node_26 -> node_29;
}
