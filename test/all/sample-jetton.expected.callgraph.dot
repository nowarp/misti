digraph "CallGraph" {
    node [shape=box];
    node_15 [label="inline fun contractAddress(s: StateInit): Address" style=filled fillcolor="#F0F8FF"];
    node_29 [label="SampleJetton::init(owner: Address, content: Cell, max_supply: Int)
[StateWrite<totalSupply,max_supply,owner,mintable,content>]"];
    node_30 [label="SampleJetton::receive(msg: Mint)
[StateRead<owner,mintable>]"];
    node_31 [label="SampleJetton::receive('Mint: 100')
[StateRead<mintable,owner>]"];
    node_32 [label="SampleJetton::receive('Owner: MintClose')
[StateRead<owner>,StateWrite<mintable>]"];
    node_33 [label="Jetton::receive(msg: TokenUpdateContent)
[StateWrite<content>]"];
    node_34 [label="Jetton::receive(msg: TokenBurnNotification)
[Send,StateWrite<totalSupply>]"];
    node_35 [label="fun Jetton::mint(to: Address, amount: Int, response_destination: Address)
[Send,StateRead<totalSupply,max_supply>,StateWrite<totalSupply>]"];
    node_36 [label="fun Jetton::requireWallet(owner: Address)"];
    node_37 [label="virtual fun Jetton::getJettonWalletInit(address: Address): StateInit"];
    node_38 [label="get fun Jetton::get_jetton_data(): JettonData
[StateRead<totalSupply,mintable,owner,content>]"];
    node_39 [label="get fun Jetton::get_wallet_address(owner: Address): Address"];
    node_40 [label="JettonDefaultWallet::init(master: Address, owner: Address)
[StateWrite<balance,owner,master>]"];
    node_41 [label="JettonDefaultWallet::receive(msg: TokenTransfer)
[Send,StateRead<owner,gasConsumption,minTonsForStorage,balance,master>,StateWrite<balance>]"];
    node_42 [label="JettonDefaultWallet::receive(msg: TokenTransferInternal)
[Send,StateRead<master,balance,owner>,StateWrite<balance>]"];
    node_43 [label="get fun JettonDefaultWallet::msgValue(value: Int): Int
[StateRead<minTonsForStorage>]"];
    node_44 [label="JettonDefaultWallet::receive(msg: TokenBurn)
[Send,StateRead<owner,balance,gasConsumption,minTonsForStorage,master>,StateWrite<balance>]"];
    node_45 [label="JettonDefaultWallet::bounced(msg: Slice)
[StateWrite<balance>]"];
    node_46 [label="get fun JettonDefaultWallet::get_wallet_data(): JettonWalletData
[StateRead<balance,owner,master>]"];
    node_47 [label="context"];
    node_48 [label="require"];
    node_49 [label="SampleJetton::mint"];
    node_50 [label="Jetton::requireOwner"];
    node_51 [label="send"];
    node_52 [label="myAddress"];
    node_53 [label="emptySlice"];
    node_54 [label="ctx::readForwardFee"];
    node_55 [label="min"];
    node_56 [label="ton"];
    node_57 [label="myBalance"];
    node_58 [label="msg::loadUint"];
    node_59 [label="msg::loadCoins"];
    node_30 -> node_47;
    node_30 -> node_48;
    node_30 -> node_48;
    node_30 -> node_49;
    node_31 -> node_47;
    node_31 -> node_48;
    node_31 -> node_49;
    node_32 -> node_47;
    node_32 -> node_48;
    node_33 -> node_50;
    node_34 -> node_36;
    node_34 -> node_51;
    node_35 -> node_48;
    node_35 -> node_37;
    node_35 -> node_51;
    node_35 -> node_15;
    node_35 -> node_52;
    node_35 -> node_53;
    node_36 -> node_47;
    node_36 -> node_37;
    node_36 -> node_48;
    node_36 -> node_15;
    node_37 -> node_52;
    node_38 -> node_37;
    node_38 -> node_52;
    node_39 -> node_37;
    node_39 -> node_15;
    node_41 -> node_47;
    node_41 -> node_48;
    node_41 -> node_54;
    node_41 -> node_54;
    node_41 -> node_48;
    node_41 -> node_55;
    node_41 -> node_56;
    node_41 -> node_48;
    node_41 -> node_15;
    node_41 -> node_51;
    node_42 -> node_47;
    node_42 -> node_48;
    node_42 -> node_15;
    node_42 -> node_48;
    node_42 -> node_51;
    node_42 -> node_43;
    node_42 -> node_54;
    node_42 -> node_51;
    node_43 -> node_57;
    node_43 -> node_55;
    node_44 -> node_47;
    node_44 -> node_48;
    node_44 -> node_48;
    node_44 -> node_54;
    node_44 -> node_48;
    node_44 -> node_51;
    node_45 -> node_58;
    node_45 -> node_58;
    node_45 -> node_59;
    node_45 -> node_48;
}
