[MEDIUM] NeverAccessedVariables: Variable queryId is never accessed
test/all/sample-jetton.tact:312:9:
  311 |         let op: Int = msg.loadUint(32);
> 312 |         let queryId: Int = msg.loadUint(64);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  313 |         let jettonAmount: Int = msg.loadCoins();
Help: Consider removing the variable
See: https://nowarp.io/tools/misti/docs/detectors/NeverAccessedVariables

[MEDIUM] SuboptimalSend: Prefer `message` over `send`
test/all/sample-jetton.tact:70:13:
  69 |         if (msg.response_destination != null) { // Cashback
> 70 |             send(SendParameters{
                   ^~~~~~~~~~~~~~~~~~~~
  71 |                 to: msg.response_destination!!, 
Help: Use more gas-efficient `message` function: https://docs.tact-lang.org/ref/core-common/#message
See: https://nowarp.io/tools/misti/docs/detectors/SuboptimalSend

[MEDIUM] SuboptimalSend: Prefer `deploy` over `send`
test/all/sample-jetton.tact:92:9:
  91 |         let wInit: StateInit = self.getJettonWalletInit(to); // Create message
> 92 |         send(SendParameters{
               ^~~~~~~~~~~~~~~~~~~~
  93 |             to: contractAddress(wInit), 
Help: Use more gas-efficient `deploy` function: https://docs.tact-lang.org/ref/core-common/#deploy
See: https://nowarp.io/tools/misti/docs/detectors/SuboptimalSend

[MEDIUM] SuboptimalSend: Prefer `deploy` over `send`
test/all/sample-jetton.tact:218:9:
  217 |         let walletAddress: Address = contractAddress(init);
> 218 |         send(SendParameters{
                ^~~~~~~~~~~~~~~~~~~~
  219 |                 to: walletAddress, 
Help: Use more gas-efficient `deploy` function: https://docs.tact-lang.org/ref/core-common/#deploy
See: https://nowarp.io/tools/misti/docs/detectors/SuboptimalSend

[MEDIUM] SuboptimalSend: Prefer `message` over `send`
test/all/sample-jetton.tact:248:13:
  247 |         if (msg.forward_ton_amount > 0) { 
> 248 |             send(SendParameters{
                    ^~~~~~~~~~~~~~~~~~~~
  249 |                 to: self.owner,
Help: Use more gas-efficient `message` function: https://docs.tact-lang.org/ref/core-common/#message
See: https://nowarp.io/tools/misti/docs/detectors/SuboptimalSend

[MEDIUM] SuboptimalSend: Prefer `message` over `send`
test/all/sample-jetton.tact:267:17:
  266 |         if (msg.response_destination != null) { // Cashback
> 267 |                 send(SendParameters {
                        ^~~~~~~~~~~~~~~~~~~~~
  268 |                     to: msg.response_destination!!, 
Help: Use more gas-efficient `message` function: https://docs.tact-lang.org/ref/core-common/#message
See: https://nowarp.io/tools/misti/docs/detectors/SuboptimalSend

[MEDIUM] SuboptimalSend: Prefer `message` over `send`
test/all/sample-jetton.tact:296:9:
  295 | 
> 296 |         send(SendParameters{  // Burn tokens
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |             to: self.master,
Help: Use more gas-efficient `message` function: https://docs.tact-lang.org/ref/core-common/#message
See: https://nowarp.io/tools/misti/docs/detectors/SuboptimalSend

[LOW] InheritedStateMutation: Inherited trait field mintable is mutated
test/all/sample-jetton.tact:47:9:
  46 |         require(ctx.sender == self.owner, "Not Owner");
> 47 |         self.mintable = false;
               ^~~~~~~~~~~~~~~~~~~~~~
  48 |     }
Directly modifying inherited trait fields can indicate a potential error or poor design
Help: Consider using setter methods to preserve invariants
See: https://nowarp.io/tools/misti/docs/detectors/InheritedStateMutation

[INFO] PreferAugmentedAssign: Prefer augmented assignment: self.totalSupply -= msg.amount
test/all/sample-jetton.tact:67:9:
  66 |         self.requireWallet(msg.owner);                     // Check wallet
> 67 |         self.totalSupply = self.totalSupply - msg.amount; // Update supply
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  68 | 
Help: Consider using augmented assignment instead: self.totalSupply -= msg.amount
See: https://nowarp.io/tools/misti/docs/detectors/PreferAugmentedAssign

[INFO] PreferAugmentedAssign: Prefer augmented assignment: self.totalSupply += amount
test/all/sample-jetton.tact:89:9:
  88 |         require(self.totalSupply + amount <= self.max_supply, "The total supply will be overlapping.");
> 89 |         self.totalSupply = self.totalSupply + amount; // Update total supply
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  90 | 
Help: Consider using augmented assignment instead: self.totalSupply += amount
See: https://nowarp.io/tools/misti/docs/detectors/PreferAugmentedAssign

[INFO] PreferAugmentedAssign: Prefer augmented assignment: self.balance -= msg.amount
test/all/sample-jetton.tact:213:9:
  212 | 
> 213 |         self.balance = self.balance - msg.amount; // Update balance
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         require(self.balance >= 0, "Invalid balance");
Help: Consider using augmented assignment instead: self.balance -= msg.amount
See: https://nowarp.io/tools/misti/docs/detectors/PreferAugmentedAssign

[INFO] PreferAugmentedAssign: Prefer augmented assignment: self.balance += msg.amount
test/all/sample-jetton.tact:244:9:
  243 | 
> 244 |         self.balance = self.balance + msg.amount;
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  245 |         require(self.balance >= 0, "Invalid balance"); // Update balance
Help: Consider using augmented assignment instead: self.balance += msg.amount
See: https://nowarp.io/tools/misti/docs/detectors/PreferAugmentedAssign

[INFO] PreferAugmentedAssign: Prefer augmented assignment: self.balance -= msg.amount
test/all/sample-jetton.tact:290:9:
  289 | 
> 290 |         self.balance = self.balance - msg.amount; // Update balance
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         require(self.balance >= 0, "Invalid balance");
Help: Consider using augmented assignment instead: self.balance -= msg.amount
See: https://nowarp.io/tools/misti/docs/detectors/PreferAugmentedAssign

[INFO] PreferAugmentedAssign: Prefer augmented assignment: self.balance += jettonAmount
test/all/sample-jetton.tact:316:9:
  315 |         
> 316 |         self.balance = self.balance + jettonAmount; // Update balance
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |     }
Help: Consider using augmented assignment instead: self.balance += jettonAmount
See: https://nowarp.io/tools/misti/docs/detectors/PreferAugmentedAssign