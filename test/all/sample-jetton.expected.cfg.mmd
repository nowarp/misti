graph TD
subgraph SampleJetton__init_2735
    SampleJetton__init_2735_126["self.totalSupply = 0"]
    SampleJetton__init_2735_127["self.max_supply = max_supply"]
    SampleJetton__init_2735_128["self.owner = owner"]
    SampleJetton__init_2735_129["self.mintable = true"]
    SampleJetton__init_2735_130["self.content = content"]:::exitNode
    SampleJetton__init_2735_126 --> SampleJetton__init_2735_127
    SampleJetton__init_2735_127 --> SampleJetton__init_2735_128
    SampleJetton__init_2735_128 --> SampleJetton__init_2735_129
    SampleJetton__init_2735_129 --> SampleJetton__init_2735_130
end
subgraph SampleJetton__receive_internal_simple_2681
    SampleJetton__receive_internal_simple_2681_131["let ctx: Context = context()"]
    SampleJetton__receive_internal_simple_2681_132["require(ctx.sender == self.owner, 'Not Owner')"]
    SampleJetton__receive_internal_simple_2681_133["require(self.mintable, 'Can't Mint Anymore')"]
    SampleJetton__receive_internal_simple_2681_134["self.mint(msg.receiver, msg.amount, self.owner)"]:::exitNode
    SampleJetton__receive_internal_simple_2681_131 --> SampleJetton__receive_internal_simple_2681_132
    SampleJetton__receive_internal_simple_2681_132 --> SampleJetton__receive_internal_simple_2681_133
    SampleJetton__receive_internal_simple_2681_133 --> SampleJetton__receive_internal_simple_2681_134
end
subgraph SampleJetton__receive_internal_comment_2709_Mint__100
    SampleJetton__receive_internal_comment_2709_Mint__100_135["let ctx: Context = context()"]
    SampleJetton__receive_internal_comment_2709_Mint__100_136["require(self.mintable, 'Can't Mint Anymore')"]
    SampleJetton__receive_internal_comment_2709_Mint__100_137["self.mint(ctx.sender, 100, self.owner)"]:::exitNode
    SampleJetton__receive_internal_comment_2709_Mint__100_135 --> SampleJetton__receive_internal_comment_2709_Mint__100_136
    SampleJetton__receive_internal_comment_2709_Mint__100_136 --> SampleJetton__receive_internal_comment_2709_Mint__100_137
end
subgraph SampleJetton__receive_internal_comment_2734_Owner__MintClose
    SampleJetton__receive_internal_comment_2734_Owner__MintClose_138["let ctx: Context = context()"]
    SampleJetton__receive_internal_comment_2734_Owner__MintClose_139["require(ctx.sender == self.owner, 'Not Owner')"]
    SampleJetton__receive_internal_comment_2734_Owner__MintClose_140["self.mintable = false"]:::exitNode
    SampleJetton__receive_internal_comment_2734_Owner__MintClose_138 --> SampleJetton__receive_internal_comment_2734_Owner__MintClose_139
    SampleJetton__receive_internal_comment_2734_Owner__MintClose_139 --> SampleJetton__receive_internal_comment_2734_Owner__MintClose_140
end
subgraph JettonDefaultWallet__init_3771
    JettonDefaultWallet__init_3771_159["self.balance = 0"]
    JettonDefaultWallet__init_3771_160["self.owner = owner"]
    JettonDefaultWallet__init_3771_161["self.master = master"]:::exitNode
    JettonDefaultWallet__init_3771_159 --> JettonDefaultWallet__init_3771_160
    JettonDefaultWallet__init_3771_160 --> JettonDefaultWallet__init_3771_161
end
subgraph JettonDefaultWallet__receive_internal_simple_3364
    JettonDefaultWallet__receive_internal_simple_3364_162["let ctx: Context = context()"]
    JettonDefaultWallet__receive_internal_simple_3364_163["require(ctx.sender == self.owner, 'Invalid sender')"]
    JettonDefaultWallet__receive_internal_simple_3364_164["let fwdFee: Int = ctx.readForwardFee() + ctx.readForwardFee()"]
    JettonDefaultWallet__receive_internal_simple_3364_165["let final: Int = 2 * self.gasConsumption + self.minTonsForStorage + fwdFee"]
    JettonDefaultWallet__receive_internal_simple_3364_166["require(ctx.value &gt; min(final, ton('0.01')), 'Invalid value!!')"]
    JettonDefaultWallet__receive_internal_simple_3364_167["self.balance = self.balance - msg.amount"]
    JettonDefaultWallet__receive_internal_simple_3364_168["require(self.balance &gt;= 0, 'Invalid balance')"]
    JettonDefaultWallet__receive_internal_simple_3364_169["let init: StateInit = initOf JettonDefaultWallet(self.master, msg.destination)"]
    JettonDefaultWallet__receive_internal_simple_3364_170["let walletAddress: Address = contractAddress(init)"]
    JettonDefaultWallet__receive_internal_simple_3364_171["send(SendParameters{to: walletAddress, value: 0, mode: SendRemainingValue, bounce: false, body: TokenTransferInternal{queryId: msg.queryId, amount: msg.amount, from: self.owner, response_destination: msg.response_destination, forward_ton_amount: msg.forward_ton_amount, forward_payload: msg.forward_payload}.toCell(), code: init.code, data: init.data})"]:::exitNode
    JettonDefaultWallet__receive_internal_simple_3364_162 --> JettonDefaultWallet__receive_internal_simple_3364_163
    JettonDefaultWallet__receive_internal_simple_3364_163 --> JettonDefaultWallet__receive_internal_simple_3364_164
    JettonDefaultWallet__receive_internal_simple_3364_164 --> JettonDefaultWallet__receive_internal_simple_3364_165
    JettonDefaultWallet__receive_internal_simple_3364_165 --> JettonDefaultWallet__receive_internal_simple_3364_166
    JettonDefaultWallet__receive_internal_simple_3364_166 --> JettonDefaultWallet__receive_internal_simple_3364_167
    JettonDefaultWallet__receive_internal_simple_3364_167 --> JettonDefaultWallet__receive_internal_simple_3364_168
    JettonDefaultWallet__receive_internal_simple_3364_168 --> JettonDefaultWallet__receive_internal_simple_3364_169
    JettonDefaultWallet__receive_internal_simple_3364_169 --> JettonDefaultWallet__receive_internal_simple_3364_170
    JettonDefaultWallet__receive_internal_simple_3364_170 --> JettonDefaultWallet__receive_internal_simple_3364_171
end
subgraph JettonDefaultWallet__receive_internal_simple_3540
    JettonDefaultWallet__receive_internal_simple_3540_172["let ctx: Context = context()"]
    JettonDefaultWallet__receive_internal_simple_3540_173["if (ctx.sender != self.master)"]
    JettonDefaultWallet__receive_internal_simple_3540_174["let sInit: StateInit = initOf JettonDefaultWallet(self.master, msg.from)"]
    JettonDefaultWallet__receive_internal_simple_3540_175["require(contractAddress(sInit) == ctx.sender, 'Invalid sender!')"]
    JettonDefaultWallet__receive_internal_simple_3540_176["self.balance = self.balance + msg.amount"]
    JettonDefaultWallet__receive_internal_simple_3540_177["require(self.balance &gt;= 0, 'Invalid balance')"]
    JettonDefaultWallet__receive_internal_simple_3540_178["if (msg.forward_ton_amount &gt; 0)"]
    JettonDefaultWallet__receive_internal_simple_3540_179["send(SendParameters{to: self.owner, value: msg.forward_ton_amount, bounce: false, body: TokenNotification{queryId: msg.queryId, amount: msg.amount, from: msg.from, forward_payload: msg.forward_payload}.toCell()})"]
    JettonDefaultWallet__receive_internal_simple_3540_180["let msgValue: Int = self.msgValue(ctx.value)"]
    JettonDefaultWallet__receive_internal_simple_3540_181["let fwdFee: Int = ctx.readForwardFee()"]
    JettonDefaultWallet__receive_internal_simple_3540_182["msgValue = msgValue - msg.forward_ton_amount - fwdFee"]
    JettonDefaultWallet__receive_internal_simple_3540_183["if (msg.response_destination != null)"]
    JettonDefaultWallet__receive_internal_simple_3540_184["send(SendParameters{to: msg.response_destination!!, value: msgValue, bounce: false, body: TokenExcesses{queryId: msg.queryId}.toCell(), mode: SendIgnoreErrors})"]:::exitNode
    JettonDefaultWallet__receive_internal_simple_3540_172 --> JettonDefaultWallet__receive_internal_simple_3540_173
    JettonDefaultWallet__receive_internal_simple_3540_173 --> JettonDefaultWallet__receive_internal_simple_3540_174
    JettonDefaultWallet__receive_internal_simple_3540_174 --> JettonDefaultWallet__receive_internal_simple_3540_175
    JettonDefaultWallet__receive_internal_simple_3540_175 --> JettonDefaultWallet__receive_internal_simple_3540_176
    JettonDefaultWallet__receive_internal_simple_3540_176 --> JettonDefaultWallet__receive_internal_simple_3540_177
    JettonDefaultWallet__receive_internal_simple_3540_177 --> JettonDefaultWallet__receive_internal_simple_3540_178
    JettonDefaultWallet__receive_internal_simple_3540_178 --> JettonDefaultWallet__receive_internal_simple_3540_179
    JettonDefaultWallet__receive_internal_simple_3540_179 --> JettonDefaultWallet__receive_internal_simple_3540_180
    JettonDefaultWallet__receive_internal_simple_3540_180 --> JettonDefaultWallet__receive_internal_simple_3540_181
    JettonDefaultWallet__receive_internal_simple_3540_181 --> JettonDefaultWallet__receive_internal_simple_3540_182
    JettonDefaultWallet__receive_internal_simple_3540_182 --> JettonDefaultWallet__receive_internal_simple_3540_183
    JettonDefaultWallet__receive_internal_simple_3540_183 --> JettonDefaultWallet__receive_internal_simple_3540_184
end
subgraph JettonDefaultWallet__msgValue
    JettonDefaultWallet__msgValue_185["let tonBalanceBeforeMsg: Int = myBalance() - value"]
    JettonDefaultWallet__msgValue_186["let storageFee: Int = self.minTonsForStorage - min(tonBalanceBeforeMsg, self.minTonsForStorage)"]
    JettonDefaultWallet__msgValue_187["value -= storageFee + self.gasConsumption"]
    JettonDefaultWallet__msgValue_188["return value"]:::exitNode
    JettonDefaultWallet__msgValue_185 --> JettonDefaultWallet__msgValue_186
    JettonDefaultWallet__msgValue_186 --> JettonDefaultWallet__msgValue_187
    JettonDefaultWallet__msgValue_187 --> JettonDefaultWallet__msgValue_188
end
subgraph JettonDefaultWallet__receive_internal_simple_3689
    JettonDefaultWallet__receive_internal_simple_3689_189["let ctx: Context = context()"]
    JettonDefaultWallet__receive_internal_simple_3689_190["require(ctx.sender == self.owner, 'Invalid sender')"]
    JettonDefaultWallet__receive_internal_simple_3689_191["self.balance = self.balance - msg.amount"]
    JettonDefaultWallet__receive_internal_simple_3689_192["require(self.balance &gt;= 0, 'Invalid balance')"]
    JettonDefaultWallet__receive_internal_simple_3689_193["let fwdFee: Int = ctx.readForwardFee()"]
    JettonDefaultWallet__receive_internal_simple_3689_194["require(ctx.value &gt; fwdFee + 2 * self.gasConsumption + self.minTonsForStorage, 'Invalid value - Burn')"]
    JettonDefaultWallet__receive_internal_simple_3689_195["send(SendParameters{to: self.master, value: 0, mode: SendRemainingValue, bounce: true, body: TokenBurnNotification{queryId: msg.queryId, amount: msg.amount, owner: self.owner, response_destination: self.owner}.toCell()})"]:::exitNode
    JettonDefaultWallet__receive_internal_simple_3689_189 --> JettonDefaultWallet__receive_internal_simple_3689_190
    JettonDefaultWallet__receive_internal_simple_3689_190 --> JettonDefaultWallet__receive_internal_simple_3689_191
    JettonDefaultWallet__receive_internal_simple_3689_191 --> JettonDefaultWallet__receive_internal_simple_3689_192
    JettonDefaultWallet__receive_internal_simple_3689_192 --> JettonDefaultWallet__receive_internal_simple_3689_193
    JettonDefaultWallet__receive_internal_simple_3689_193 --> JettonDefaultWallet__receive_internal_simple_3689_194
    JettonDefaultWallet__receive_internal_simple_3689_194 --> JettonDefaultWallet__receive_internal_simple_3689_195
end
subgraph JettonDefaultWallet__receive_bounce_3737
    JettonDefaultWallet__receive_bounce_3737_196["let op: Int = msg.loadUint(32)"]
    JettonDefaultWallet__receive_bounce_3737_197["let queryId: Int = msg.loadUint(64)"]
    JettonDefaultWallet__receive_bounce_3737_198["let jettonAmount: Int = msg.loadCoins()"]
    JettonDefaultWallet__receive_bounce_3737_199["require(op == 0x178d4519 || op == 0x7bdd97de, 'Invalid bounced message')"]
    JettonDefaultWallet__receive_bounce_3737_200["self.balance = self.balance + jettonAmount"]:::exitNode
    JettonDefaultWallet__receive_bounce_3737_196 --> JettonDefaultWallet__receive_bounce_3737_197
    JettonDefaultWallet__receive_bounce_3737_197 --> JettonDefaultWallet__receive_bounce_3737_198
    JettonDefaultWallet__receive_bounce_3737_198 --> JettonDefaultWallet__receive_bounce_3737_199
    JettonDefaultWallet__receive_bounce_3737_199 --> JettonDefaultWallet__receive_bounce_3737_200
end
subgraph JettonDefaultWallet__get_wallet_data
    JettonDefaultWallet__get_wallet_data_201["return JettonWalletData{balance: self.balance, owner: self.owner, master: self.master, walletCode: initOf JettonDefaultWallet(self.master, self.owner).code}"]:::exitNode
end
subgraph Jetton__receive_internal_simple_2772
    Jetton__receive_internal_simple_2772_141["self.requireOwner()"]
    Jetton__receive_internal_simple_2772_142["self.content = msg.content"]:::exitNode
    Jetton__receive_internal_simple_2772_141 --> Jetton__receive_internal_simple_2772_142
end
subgraph Jetton__receive_internal_simple_2837
    Jetton__receive_internal_simple_2837_143["self.requireWallet(msg.owner)"]
    Jetton__receive_internal_simple_2837_144["self.totalSupply = self.totalSupply - msg.amount"]
    Jetton__receive_internal_simple_2837_145["if (msg.response_destination != null)"]
    Jetton__receive_internal_simple_2837_146["send(SendParameters{to: msg.response_destination!!, value: 0, bounce: false, mode: SendRemainingValue | SendIgnoreErrors, body: TokenExcesses{queryId: msg.queryId}.toCell()})"]:::exitNode
    Jetton__receive_internal_simple_2837_143 --> Jetton__receive_internal_simple_2837_144
    Jetton__receive_internal_simple_2837_144 --> Jetton__receive_internal_simple_2837_145
    Jetton__receive_internal_simple_2837_145 --> Jetton__receive_internal_simple_2837_146
end
subgraph Jetton__mint
    Jetton__mint_147["require(self.totalSupply + amount &lt;= self.max_supply, 'The total supply will be overlapping.')"]
    Jetton__mint_148["self.totalSupply = self.totalSupply + amount"]
    Jetton__mint_149["let wInit: StateInit = self.getJettonWalletInit(to)"]
    Jetton__mint_150["send(SendParameters{to: contractAddress(wInit), value: 0, bounce: false, mode: SendRemainingValue, body: TokenTransferInternal{queryId: 0, amount: amount, from: myAddress(), response_destination: response_destination, forward_ton_amount: 0, forward_payload: emptySlice()}.toCell(), code: wInit.code, data: wInit.data})"]:::exitNode
    Jetton__mint_147 --> Jetton__mint_148
    Jetton__mint_148 --> Jetton__mint_149
    Jetton__mint_149 --> Jetton__mint_150
end
subgraph Jetton__requireWallet
    Jetton__requireWallet_151["let ctx: Context = context()"]
    Jetton__requireWallet_152["let wInit: StateInit = self.getJettonWalletInit(owner)"]
    Jetton__requireWallet_153["require(contractAddress(wInit) == ctx.sender, 'Invalid sender')"]:::exitNode
    Jetton__requireWallet_151 --> Jetton__requireWallet_152
    Jetton__requireWallet_152 --> Jetton__requireWallet_153
end
subgraph Jetton__getJettonWalletInit
    Jetton__getJettonWalletInit_154["return initOf JettonDefaultWallet(myAddress(), address)"]:::exitNode
end
subgraph Jetton__get_jetton_data
    Jetton__get_jetton_data_155["let code: Cell = self.getJettonWalletInit(myAddress()).code"]
    Jetton__get_jetton_data_156["return JettonData{totalSupply: self.totalSupply, mintable: self.mintable, owner: self.owner, content: self.content, walletCode: code}"]:::exitNode
    Jetton__get_jetton_data_155 --> Jetton__get_jetton_data_156
end
subgraph Jetton__get_wallet_address
    Jetton__get_wallet_address_157["let wInit: StateInit = self.getJettonWalletInit(owner)"]
    Jetton__get_wallet_address_158["return contractAddress(wInit)"]:::exitNode
    Jetton__get_wallet_address_157 --> Jetton__get_wallet_address_158
end
