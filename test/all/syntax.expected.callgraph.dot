digraph "CallGraph" {
    node [shape=box];
    node_12 [label="inline fun random(min: Int, max: Int): Int"];
    node_15 [label="fun send(params: SendParameters): Int"];
    node_17 [label="fun test_try(a: Int)"];
    node_18 [label="fun test_loops()"];
    node_19 [label="fun testTryCatch(a: Int)"];
    node_20 [label="fun testLoops()"];
    node_21 [label="fun callAsm(s: Slice): Cell"];
    node_22 [label="override get fun getter(): Int"];
    node_23 [label="fun test()"];
    node_24 [label="fun test(): Int"];
    node_25 [label="external()"];
    node_26 [label="init()
[StateWrite]"];
    node_27 [label="fun funcWithSend()
[Send,StateRead]"];
    node_28 [label="fun funcWithStateRead()
[StateRead]"];
    node_29 [label="fun funcWithStateWrite1()
[StateWrite]"];
    node_30 [label="fun funcWithStateWrite2(s: Slice): Address"];
    node_31 [label="fun funcWithMultipleEffects()
[AccessDatetime,PrgUse,PrgSeedInit]"];
    node_32 [label="receive()"];
    node_33 [label="dump"];
    node_34 [label="emptyMap"];
    node_35 [label="m::set"];
    node_36 [label="s::loadRefEx"];
    node_37 [label="getA"];
    node_38 [label="sender"];
    node_39 [label="newAddress"];
    node_40 [label="s::loadAddress"];
    node_41 [label="now"];
    node_42 [label="nativeRandomizeLt"];
    node_43 [label="beginString"];
    node_44 [label="a::append"];
    node_17 -> node_33;
    node_18 -> node_34;
    node_19 -> node_33;
    node_20 -> node_34;
    node_20 -> node_35;
    node_20 -> node_35;
    node_20 -> node_35;
    node_21 -> node_36;
    node_24 -> node_37;
    node_26 -> node_38;
    node_27 -> node_15;
    node_29 -> node_39;
    node_30 -> node_40;
    node_31 -> node_41;
    node_31 -> node_12;
    node_31 -> node_42;
    node_32 -> node_43;
    node_32 -> node_44;
}
