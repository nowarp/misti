graph TD
    node_10["inline fun random(min: Int, max: Int): Int"]
    node_18["inline fun newAddress(chain: Int, hash: Int): Address"]
    node_23["fun test_try(a: Int)"]
    node_24["fun test_loops()"]
    node_25["fun testTryCatch(a: Int)"]
    node_26["fun testLoops()"]
    node_27["fun callAsm(s: Slice): Cell"]
    node_28["extends fun String::toInt(self: String): Int"]
    node_29["override get fun TestContract::getter(): Int"]
    node_30["get fun Z::getter(): Int
[StateRead<a>]"]
    node_31["fun TestContractF::test()"]
    node_32["fun TParent::getA(): Int
[StateRead<a>]"]
    node_33["fun TestContractT::test(): Int"]
    node_34["TestContractT::external()"]
    node_35["EffectTest::init()
[StateWrite<addr,b,s>]"]
    node_36["fun EffectTest::funcWithSend()
[Send,StateRead<addr>]"]
    node_37["fun EffectTest::funcWithStateRead()
[StateRead<addr>]"]
    node_38["fun EffectTest::funcWithStateWrite1()
[StateRead<b,addr,s>,StateWrite<addr>]"]
    node_39["fun EffectTest::funcWithStateWrite2(s: Slice): Address"]
    node_40["fun EffectTest::funcWithMultipleEffects()
[AccessDatetime,PrgUse,PrgSeedInit]"]
    node_41["EffectTest::receive()"]
    node_42["get fun A::m(): map<Int, Int>
[StateRead<m>]"]
    node_43["A::receive()
[StateRead<m>]"]
    node_44["ContractParams::receive()"]
    node_48["dump"]
    node_49["emptyMap"]
    node_50["m::set"]
    node_51["s::loadRefEx"]
    node_52["String::asSlice"]
    node_53["string::empty"]
    node_54["string::loadUint"]
    node_55["TestContractT::getA"]
    node_56["sender"]
    node_57["beginCell"]
    node_58["send"]
    node_59["s::loadAddress"]
    node_60["now"]
    node_61["nativeRandomizeLt"]
    node_62["beginString"]
    node_63["a::append"]
    node_23 --> node_48
    node_24 --> node_49
    node_25 --> node_48
    node_26 --> node_49
    node_26 --> node_50
    node_26 --> node_50
    node_26 --> node_50
    node_27 --> node_51
    node_28 --> node_52
    node_28 --> node_53
    node_28 --> node_54
    node_33 --> node_55
    node_35 --> node_56
    node_35 --> node_57
    node_36 --> node_58
    node_38 --> node_18
    node_39 --> node_59
    node_40 --> node_60
    node_40 --> node_10
    node_40 --> node_61
    node_41 --> node_62
    node_41 --> node_63
    style node_10 fill:#F0F8FF,stroke:#000,stroke-width:1px;
    style node_18 fill:#F0F8FF,stroke:#000,stroke-width:1px;
