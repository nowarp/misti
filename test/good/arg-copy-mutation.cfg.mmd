graph TD
subgraph Test__test
    Test__test_68["m.set(3, 3)"]
    Test__test_69["a += 1"]
    Test__test_70["a = 42"]
    Test__test_71["let _b: Int? = m.get(3)"]
    Test__test_72["self.m.set(3, 3)"]:::exitNode
    Test__test_68 --> Test__test_69
    Test__test_69 --> Test__test_70
    Test__test_70 --> Test__test_71
    Test__test_71 --> Test__test_72
end
subgraph Test__testOnce
    Test__testOnce_73["m.set(1, 1)"]
    Test__testOnce_74["m.set(2, 2)"]:::exitNode
    Test__testOnce_73 --> Test__testOnce_74
end
subgraph Test__testForeach
    Test__testForeach_75["foreach ((key, value) of m)"]
    Test__testForeach_76["m.set(3, 3)"]
    Test__testForeach_75 --> Test__testForeach_76
    Test__testForeach_76 --> Test__testForeach_75
end
subgraph Test__id
    Test__id_77["return m"]:::exitNode
end
subgraph Test__testReturn1
    Test__testReturn1_78["m.set(3, 3)"]
    Test__testReturn1_79["if (WHATEVER == 0)"]
    Test__testReturn1_80["return m"]:::exitNode
    Test__testReturn1_81["return self.id(m)"]:::exitNode
    Test__testReturn1_78 --> Test__testReturn1_79
    Test__testReturn1_79 --> Test__testReturn1_80
    Test__testReturn1_79 --> Test__testReturn1_81
end
subgraph Test__testReturn2
    Test__testReturn2_82["m.set(3, 3)"]
    Test__testReturn2_83["if (WHATEVER == 0)"]
    Test__testReturn2_84["return m"]:::exitNode
    Test__testReturn2_85["let mCopy: map&lt;Int, Int&gt; = m"]
    Test__testReturn2_86["return mCopy"]:::exitNode
    Test__testReturn2_82 --> Test__testReturn2_83
    Test__testReturn2_83 --> Test__testReturn2_84
    Test__testReturn2_83 --> Test__testReturn2_85
    Test__testReturn2_85 --> Test__testReturn2_86
end
