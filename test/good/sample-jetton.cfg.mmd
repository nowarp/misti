graph TD
subgraph SampleJetton__init_1905
    SampleJetton__init_1905_151["self.totalSupply = 0"]
    SampleJetton__init_1905_152["self.max_supply = max_supply"]
    SampleJetton__init_1905_154["self.owner = owner"]
    SampleJetton__init_1905_156["self.mintable = true"]
    SampleJetton__init_1905_158["self.content = content"]:::exitNode
    SampleJetton__init_1905_151 --> SampleJetton__init_1905_152
    SampleJetton__init_1905_152 --> SampleJetton__init_1905_154
    SampleJetton__init_1905_154 --> SampleJetton__init_1905_156
    SampleJetton__init_1905_156 --> SampleJetton__init_1905_158
end
subgraph SampleJetton__receive_internal_simple_1855
    SampleJetton__receive_internal_simple_1855_160["let ctx: Context = context()"]
    SampleJetton__receive_internal_simple_1855_161["require(ctx.sender == self.owner, 'Not Owner')"]
    SampleJetton__receive_internal_simple_1855_163["require(self.mintable, 'Can't Mint Anymore')"]
    SampleJetton__receive_internal_simple_1855_165["self.mint(msg.receiver, msg.amount, self.owner)"]:::exitNode
    SampleJetton__receive_internal_simple_1855_160 --> SampleJetton__receive_internal_simple_1855_161
    SampleJetton__receive_internal_simple_1855_161 --> SampleJetton__receive_internal_simple_1855_163
    SampleJetton__receive_internal_simple_1855_163 --> SampleJetton__receive_internal_simple_1855_165
end
subgraph SampleJetton__receive_internal_comment_1880_Mint__100
    SampleJetton__receive_internal_comment_1880_Mint__100_167["let ctx: Context = context()"]
    SampleJetton__receive_internal_comment_1880_Mint__100_168["require(self.mintable, 'Can't Mint Anymore')"]
    SampleJetton__receive_internal_comment_1880_Mint__100_170["self.mint(ctx.sender, 100, self.owner)"]:::exitNode
    SampleJetton__receive_internal_comment_1880_Mint__100_167 --> SampleJetton__receive_internal_comment_1880_Mint__100_168
    SampleJetton__receive_internal_comment_1880_Mint__100_168 --> SampleJetton__receive_internal_comment_1880_Mint__100_170
end
subgraph SampleJetton__receive_internal_comment_1903_Owner__MintClose
    SampleJetton__receive_internal_comment_1903_Owner__MintClose_172["let ctx: Context = context()"]
    SampleJetton__receive_internal_comment_1903_Owner__MintClose_173["require(ctx.sender == self.owner, 'Not Owner')"]
    SampleJetton__receive_internal_comment_1903_Owner__MintClose_175["self.mintable = false"]:::exitNode
    SampleJetton__receive_internal_comment_1903_Owner__MintClose_172 --> SampleJetton__receive_internal_comment_1903_Owner__MintClose_173
    SampleJetton__receive_internal_comment_1903_Owner__MintClose_173 --> SampleJetton__receive_internal_comment_1903_Owner__MintClose_175
end
subgraph JettonDefaultWallet__init_2908
    JettonDefaultWallet__init_2908_178["self.balance = 0"]
    JettonDefaultWallet__init_2908_179["self.owner = owner"]
    JettonDefaultWallet__init_2908_181["self.master = master"]:::exitNode
    JettonDefaultWallet__init_2908_178 --> JettonDefaultWallet__init_2908_179
    JettonDefaultWallet__init_2908_179 --> JettonDefaultWallet__init_2908_181
end
subgraph JettonDefaultWallet__receive_internal_simple_2515
    JettonDefaultWallet__receive_internal_simple_2515_183["let ctx: Context = context()"]
    JettonDefaultWallet__receive_internal_simple_2515_184["require(ctx.sender == self.owner, 'Invalid sender')"]
    JettonDefaultWallet__receive_internal_simple_2515_186["let fwdFee: Int = ctx.readForwardFee() + ctx.readForwardFee()"]
    JettonDefaultWallet__receive_internal_simple_2515_188["let final: Int = 2 * self.gasConsumption + self.minTonsForStorage + fwdFee"]
    JettonDefaultWallet__receive_internal_simple_2515_190["require(ctx.value &gt; min(final, ton('0.01')), 'Invalid value!!')"]
    JettonDefaultWallet__receive_internal_simple_2515_192["self.balance = self.balance - msg.amount"]
    JettonDefaultWallet__receive_internal_simple_2515_194["require(self.balance &gt;= 0, 'Invalid balance')"]
    JettonDefaultWallet__receive_internal_simple_2515_196["let init: StateInit = initOf JettonDefaultWallet(self.master, msg.destination)"]
    JettonDefaultWallet__receive_internal_simple_2515_198["let walletAddress: Address = contractAddress(init)"]
    JettonDefaultWallet__receive_internal_simple_2515_200["send(SendParameters{to: walletAddress, value: 0, mode: SendRemainingValue, bounce: false, body: TokenTransferInternal{queryId: msg.queryId, amount: msg.amount, from: self.owner, response_destination: msg.response_destination, forward_ton_amount: msg.forward_ton_amount, forward_payload: msg.forward_payload}.toCell(), code: init.code, data: init.data})"]:::exitNode
    JettonDefaultWallet__receive_internal_simple_2515_183 --> JettonDefaultWallet__receive_internal_simple_2515_184
    JettonDefaultWallet__receive_internal_simple_2515_184 --> JettonDefaultWallet__receive_internal_simple_2515_186
    JettonDefaultWallet__receive_internal_simple_2515_186 --> JettonDefaultWallet__receive_internal_simple_2515_188
    JettonDefaultWallet__receive_internal_simple_2515_188 --> JettonDefaultWallet__receive_internal_simple_2515_190
    JettonDefaultWallet__receive_internal_simple_2515_190 --> JettonDefaultWallet__receive_internal_simple_2515_192
    JettonDefaultWallet__receive_internal_simple_2515_192 --> JettonDefaultWallet__receive_internal_simple_2515_194
    JettonDefaultWallet__receive_internal_simple_2515_194 --> JettonDefaultWallet__receive_internal_simple_2515_196
    JettonDefaultWallet__receive_internal_simple_2515_196 --> JettonDefaultWallet__receive_internal_simple_2515_198
    JettonDefaultWallet__receive_internal_simple_2515_198 --> JettonDefaultWallet__receive_internal_simple_2515_200
end
subgraph JettonDefaultWallet__receive_internal_simple_2685
    JettonDefaultWallet__receive_internal_simple_2685_202["let ctx: Context = context()"]
    JettonDefaultWallet__receive_internal_simple_2685_203["if (ctx.sender != self.master)"]
    JettonDefaultWallet__receive_internal_simple_2685_205["let sInit: StateInit = initOf JettonDefaultWallet(self.master, msg.from)"]
    JettonDefaultWallet__receive_internal_simple_2685_207["require(contractAddress(sInit) == ctx.sender, 'Invalid sender!')"]
    JettonDefaultWallet__receive_internal_simple_2685_209["self.balance = self.balance + msg.amount"]
    JettonDefaultWallet__receive_internal_simple_2685_211["require(self.balance &gt;= 0, 'Invalid balance')"]
    JettonDefaultWallet__receive_internal_simple_2685_213["if (msg.forward_ton_amount &gt; 0)"]
    JettonDefaultWallet__receive_internal_simple_2685_215["send(SendParameters{to: self.owner, value: msg.forward_ton_amount, bounce: false, body: TokenNotification{queryId: msg.queryId, amount: msg.amount, from: msg.from, forward_payload: msg.forward_payload}.toCell()})"]
    JettonDefaultWallet__receive_internal_simple_2685_217["let msgValue: Int = self.msgValue(ctx.value)"]
    JettonDefaultWallet__receive_internal_simple_2685_219["let fwdFee: Int = ctx.readForwardFee()"]
    JettonDefaultWallet__receive_internal_simple_2685_221["msgValue = msgValue - msg.forward_ton_amount - fwdFee"]
    JettonDefaultWallet__receive_internal_simple_2685_223["if (msg.response_destination != null)"]
    JettonDefaultWallet__receive_internal_simple_2685_225["send(SendParameters{to: !!msg.response_destination, value: msgValue, bounce: false, body: TokenExcesses{queryId: msg.queryId}.toCell(), mode: SendIgnoreErrors})"]:::exitNode
    JettonDefaultWallet__receive_internal_simple_2685_202 --> JettonDefaultWallet__receive_internal_simple_2685_203
    JettonDefaultWallet__receive_internal_simple_2685_203 --> JettonDefaultWallet__receive_internal_simple_2685_205
    JettonDefaultWallet__receive_internal_simple_2685_205 --> JettonDefaultWallet__receive_internal_simple_2685_207
    JettonDefaultWallet__receive_internal_simple_2685_207 --> JettonDefaultWallet__receive_internal_simple_2685_209
    JettonDefaultWallet__receive_internal_simple_2685_209 --> JettonDefaultWallet__receive_internal_simple_2685_211
    JettonDefaultWallet__receive_internal_simple_2685_211 --> JettonDefaultWallet__receive_internal_simple_2685_213
    JettonDefaultWallet__receive_internal_simple_2685_213 --> JettonDefaultWallet__receive_internal_simple_2685_215
    JettonDefaultWallet__receive_internal_simple_2685_215 --> JettonDefaultWallet__receive_internal_simple_2685_217
    JettonDefaultWallet__receive_internal_simple_2685_217 --> JettonDefaultWallet__receive_internal_simple_2685_219
    JettonDefaultWallet__receive_internal_simple_2685_219 --> JettonDefaultWallet__receive_internal_simple_2685_221
    JettonDefaultWallet__receive_internal_simple_2685_221 --> JettonDefaultWallet__receive_internal_simple_2685_223
    JettonDefaultWallet__receive_internal_simple_2685_223 --> JettonDefaultWallet__receive_internal_simple_2685_225
end
subgraph JettonDefaultWallet__msgValue
    JettonDefaultWallet__msgValue_227["let tonBalanceBeforeMsg: Int = myBalance() - value"]
    JettonDefaultWallet__msgValue_228["let storageFee: Int = self.minTonsForStorage - min(tonBalanceBeforeMsg, self.minTonsForStorage)"]
    JettonDefaultWallet__msgValue_230["value -= storageFee + self.gasConsumption"]
    JettonDefaultWallet__msgValue_232["return value"]:::exitNode
    JettonDefaultWallet__msgValue_227 --> JettonDefaultWallet__msgValue_228
    JettonDefaultWallet__msgValue_228 --> JettonDefaultWallet__msgValue_230
    JettonDefaultWallet__msgValue_230 --> JettonDefaultWallet__msgValue_232
end
subgraph JettonDefaultWallet__receive_internal_simple_2830
    JettonDefaultWallet__receive_internal_simple_2830_234["let ctx: Context = context()"]
    JettonDefaultWallet__receive_internal_simple_2830_235["require(ctx.sender == self.owner, 'Invalid sender')"]
    JettonDefaultWallet__receive_internal_simple_2830_237["self.balance = self.balance - msg.amount"]
    JettonDefaultWallet__receive_internal_simple_2830_239["require(self.balance &gt;= 0, 'Invalid balance')"]
    JettonDefaultWallet__receive_internal_simple_2830_241["let fwdFee: Int = ctx.readForwardFee()"]
    JettonDefaultWallet__receive_internal_simple_2830_243["require(ctx.value &gt; fwdFee + 2 * self.gasConsumption + self.minTonsForStorage, 'Invalid value - Burn')"]
    JettonDefaultWallet__receive_internal_simple_2830_245["send(SendParameters{to: self.master, value: 0, mode: SendRemainingValue, bounce: true, body: TokenBurnNotification{queryId: msg.queryId, amount: msg.amount, owner: self.owner, response_destination: self.owner}.toCell()})"]:::exitNode
    JettonDefaultWallet__receive_internal_simple_2830_234 --> JettonDefaultWallet__receive_internal_simple_2830_235
    JettonDefaultWallet__receive_internal_simple_2830_235 --> JettonDefaultWallet__receive_internal_simple_2830_237
    JettonDefaultWallet__receive_internal_simple_2830_237 --> JettonDefaultWallet__receive_internal_simple_2830_239
    JettonDefaultWallet__receive_internal_simple_2830_239 --> JettonDefaultWallet__receive_internal_simple_2830_241
    JettonDefaultWallet__receive_internal_simple_2830_241 --> JettonDefaultWallet__receive_internal_simple_2830_243
    JettonDefaultWallet__receive_internal_simple_2830_243 --> JettonDefaultWallet__receive_internal_simple_2830_245
end
subgraph JettonDefaultWallet__receive_bounce_2874
    JettonDefaultWallet__receive_bounce_2874_247["let op: Int = msg.loadUint(32)"]
    JettonDefaultWallet__receive_bounce_2874_248["let queryId: Int = msg.loadUint(64)"]
    JettonDefaultWallet__receive_bounce_2874_250["let jettonAmount: Int = msg.loadCoins()"]
    JettonDefaultWallet__receive_bounce_2874_252["require(op == 0x178d4519 || op == 0x7bdd97de, 'Invalid bounced message')"]
    JettonDefaultWallet__receive_bounce_2874_254["self.balance = self.balance + jettonAmount"]:::exitNode
    JettonDefaultWallet__receive_bounce_2874_247 --> JettonDefaultWallet__receive_bounce_2874_248
    JettonDefaultWallet__receive_bounce_2874_248 --> JettonDefaultWallet__receive_bounce_2874_250
    JettonDefaultWallet__receive_bounce_2874_250 --> JettonDefaultWallet__receive_bounce_2874_252
    JettonDefaultWallet__receive_bounce_2874_252 --> JettonDefaultWallet__receive_bounce_2874_254
end
subgraph JettonDefaultWallet__get_wallet_data
    JettonDefaultWallet__get_wallet_data_256["return JettonWalletData{balance: self.balance, owner: self.owner, master: self.master, walletCode: initOf JettonDefaultWallet(self.master, self.owner).code}"]:::exitNode
end
