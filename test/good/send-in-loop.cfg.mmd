graph TD
subgraph Test__tWhile
    Test__tWhile_148["let i: Int = 0"]
    Test__tWhile_149["while (i &lt; 10)"]
    Test__tWhile_151["send(SendParameters{to: sender(), value: i})"]
    Test__tWhile_153["i = i + 1"]
    Test__tWhile_148 --> Test__tWhile_149
    Test__tWhile_149 --> Test__tWhile_151
    Test__tWhile_151 --> Test__tWhile_153
    Test__tWhile_153 --> Test__tWhile_149
end
subgraph Test__tRepeat
    Test__tRepeat_156["repeat (10)"]
    Test__tRepeat_157["send(SendParameters{to: sender(), value: 0})"]
    Test__tRepeat_156 --> Test__tRepeat_157
    Test__tRepeat_157 --> Test__tRepeat_156
end
subgraph Test__tUntil
    Test__tUntil_160["let i: Int = 0"]
    Test__tUntil_161["until (i == 10)"]
    Test__tUntil_163["send(SendParameters{to: sender(), value: i})"]
    Test__tUntil_165["i = i + 1"]
    Test__tUntil_160 --> Test__tUntil_161
    Test__tUntil_161 --> Test__tUntil_163
    Test__tUntil_163 --> Test__tUntil_165
    Test__tUntil_165 --> Test__tUntil_161
end
subgraph Test__tForeach
    Test__tForeach_168["let m: map&lt;Int, Int&gt; = emptyMap()"]
    Test__tForeach_169["foreach ((k, v) of m)"]
    Test__tForeach_171["send(SendParameters{to: sender(), value: v})"]
    Test__tForeach_168 --> Test__tForeach_169
    Test__tForeach_169 --> Test__tForeach_171
    Test__tForeach_171 --> Test__tForeach_169
end
subgraph Test__tNested
    Test__tNested_174["let i: Int = 0"]
    Test__tNested_175["while (i &lt; 10)"]
    Test__tNested_177["repeat (10)"]
    Test__tNested_179["send(SendParameters{to: sender(), value: i})"]
    Test__tNested_182["i = i + 1"]
    Test__tNested_174 --> Test__tNested_175
    Test__tNested_175 --> Test__tNested_177
    Test__tNested_177 --> Test__tNested_179
    Test__tNested_179 --> Test__tNested_177
    Test__tNested_177 --> Test__tNested_182
    Test__tNested_182 --> Test__tNested_175
end
subgraph SendInLoop__init_1869
    SendInLoop__init_1869_186["self.owner = owner"]
    SendInLoop__init_1869_187["self.a = 0"]:::exitNode
    SendInLoop__init_1869_186 --> SendInLoop__init_1869_187
end
subgraph SendInLoop__exampleWhileLoop
    SendInLoop__exampleWhileLoop_189["let i = 0"]
    SendInLoop__exampleWhileLoop_190["while (i &lt; limit)"]
    SendInLoop__exampleWhileLoop_192["i += 1"]
    SendInLoop__exampleWhileLoop_194["let a = send(SendParameters{to: self.owner, value: 0, bounce: false, body: Msg{a: i}.toCell()})"]
    SendInLoop__exampleWhileLoop_189 --> SendInLoop__exampleWhileLoop_190
    SendInLoop__exampleWhileLoop_190 --> SendInLoop__exampleWhileLoop_192
    SendInLoop__exampleWhileLoop_192 --> SendInLoop__exampleWhileLoop_194
    SendInLoop__exampleWhileLoop_194 --> SendInLoop__exampleWhileLoop_190
end
subgraph SendInLoop__testReply
    SendInLoop__testReply_197["let i: Int = 0"]
    SendInLoop__testReply_198["while (i &lt; 5)"]
    SendInLoop__testReply_200["self.reply(Msg{a: i}.toCell())"]
    SendInLoop__testReply_202["i = i + 1"]
    SendInLoop__testReply_197 --> SendInLoop__testReply_198
    SendInLoop__testReply_198 --> SendInLoop__testReply_200
    SendInLoop__testReply_200 --> SendInLoop__testReply_202
    SendInLoop__testReply_202 --> SendInLoop__testReply_198
end
