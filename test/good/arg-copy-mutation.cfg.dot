digraph "arg-copy-mutation" {
    node [shape=box];
    subgraph "cluster_Test__test" {
        label="Test__test";
        "Test__test_68" [label="m.set(3, 3)"];
        "Test__test_69" [label="a += 1"];
        "Test__test_70" [label="a = 42"];
        "Test__test_71" [label="let _b: Int? = m.get(3)"];
        "Test__test_72" [label="self.m.set(3, 3)",style=filled,fillcolor="#66A7DB"];
        "Test__test_68" -> "Test__test_69";
        "Test__test_69" -> "Test__test_70";
        "Test__test_70" -> "Test__test_71";
        "Test__test_71" -> "Test__test_72";
    }
    subgraph "cluster_Test__testOnce" {
        label="Test__testOnce";
        "Test__testOnce_73" [label="m.set(1, 1)"];
        "Test__testOnce_74" [label="m.set(2, 2)",style=filled,fillcolor="#66A7DB"];
        "Test__testOnce_73" -> "Test__testOnce_74";
    }
    subgraph "cluster_Test__testForeach" {
        label="Test__testForeach";
        "Test__testForeach_75" [label="foreach ((key, value) of m)"];
        "Test__testForeach_76" [label="m.set(3, 3)"];
        "Test__testForeach_75" -> "Test__testForeach_76";
        "Test__testForeach_76" -> "Test__testForeach_75";
    }
    subgraph "cluster_Test__id" {
        label="Test__id";
        "Test__id_77" [label="return m",style=filled,fillcolor="#66A7DB"];
    }
    subgraph "cluster_Test__testReturn1" {
        label="Test__testReturn1";
        "Test__testReturn1_78" [label="m.set(3, 3)"];
        "Test__testReturn1_79" [label="if (WHATEVER == 0)"];
        "Test__testReturn1_80" [label="return m",style=filled,fillcolor="#66A7DB"];
        "Test__testReturn1_81" [label="return self.id(m)",style=filled,fillcolor="#66A7DB"];
        "Test__testReturn1_78" -> "Test__testReturn1_79";
        "Test__testReturn1_79" -> "Test__testReturn1_80";
        "Test__testReturn1_79" -> "Test__testReturn1_81";
    }
    subgraph "cluster_Test__testReturn2" {
        label="Test__testReturn2";
        "Test__testReturn2_82" [label="m.set(3, 3)"];
        "Test__testReturn2_83" [label="if (WHATEVER == 0)"];
        "Test__testReturn2_84" [label="return m",style=filled,fillcolor="#66A7DB"];
        "Test__testReturn2_85" [label="let mCopy: map<Int, Int> = m"];
        "Test__testReturn2_86" [label="return mCopy",style=filled,fillcolor="#66A7DB"];
        "Test__testReturn2_82" -> "Test__testReturn2_83";
        "Test__testReturn2_83" -> "Test__testReturn2_84";
        "Test__testReturn2_83" -> "Test__testReturn2_85";
        "Test__testReturn2_85" -> "Test__testReturn2_86";
    }
}
