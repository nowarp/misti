digraph "never-accessed" {
    node [shape=box];
    subgraph "cluster_test1" {
        label="test1";
        "test1_68" [label="let a: Int = 20"];
        "test1_69" [label="if (true)"];
        "test1_70" [label="a = 42"];
        "test1_71" [label="return 42",style=filled,fillcolor="#66A7DB"];
        "test1_68" -> "test1_69";
        "test1_69" -> "test1_70";
        "test1_70" -> "test1_71";
    }
    subgraph "cluster_test2" {
        label="test2";
        "test2_72" [label="while (true)"];
        "test2_73" [label="let a: Int = 0"];
        "test2_72" -> "test2_73";
        "test2_73" -> "test2_72";
    }
    subgraph "cluster_test3" {
        label="test3";
        "test3_74" [label="let a: Int = 20"];
        "test3_75" [label="let b: Int = 22"];
        "test3_76" [label="let c: Int = 24"];
        "test3_77" [label="if (true)"];
        "test3_78" [label="c = a + b"];
        "test3_79" [label="return c",style=filled,fillcolor="#66A7DB"];
        "test3_74" -> "test3_75";
        "test3_75" -> "test3_76";
        "test3_76" -> "test3_77";
        "test3_77" -> "test3_78";
        "test3_78" -> "test3_79";
    }
    subgraph "cluster_test4" {
        label="test4";
        "test4_80" [label="let a: Int = 20"];
        "test4_81" [label="let b: Int = 22"];
        "test4_82" [label="return b",style=filled,fillcolor="#66A7DB"];
        "test4_80" -> "test4_81";
        "test4_81" -> "test4_82";
    }
    subgraph "cluster_FieldTest1__init_1751" {
        label="FieldTest1__init_1751";
        "FieldTest1__init_1751_83" [label="self.f1 = sender()",style=filled,fillcolor="#66A7DB"];
    }
    subgraph "cluster_FieldTest1__use_f1" {
        label="FieldTest1__use_f1";
        "FieldTest1__use_f1_84" [label="return self.f1",style=filled,fillcolor="#66A7DB"];
    }
    subgraph "cluster_FieldTest1__forEachUse" {
        label="FieldTest1__forEachUse";
        "FieldTest1__forEachUse_85" [label="let foreachmap: map<Address, Address> = self.foreachmap"];
        "FieldTest1__forEachUse_86" [label="foreach ((_, _) of foreachmap)"];
        "FieldTest1__forEachUse_85" -> "FieldTest1__forEachUse_86";
        "FieldTest1__forEachUse_86" -> "FieldTest1__forEachUse_86";
    }
    subgraph "cluster_FieldTest2__init_1763" {
        label="FieldTest2__init_1763";
        "FieldTest2__init_1763_87" [label="self.f1 = sender()",style=filled,fillcolor="#66A7DB"];
    }
    subgraph "cluster_ConstantFieldTest__test" {
        label="ConstantFieldTest__test";
        "ConstantFieldTest__test_88" [label="send(SendParameters{to: sender(), bounce: true, value: self.val, mode: SendRemainingValue + SendIgnoreErrors})",style=filled,fillcolor="#66A7DB"];
    }
    subgraph "cluster_TestContract__receive_internal_fallback_1801" {
        label="TestContract__receive_internal_fallback_1801";
        "TestContract__receive_internal_fallback_1801_89" [label="let test: Int = 123",style=filled,fillcolor="#66A7DB"];
    }
    subgraph "cluster_TestContract2__receive_internal_fallback_1808" {
        label="TestContract2__receive_internal_fallback_1808";
        "TestContract2__receive_internal_fallback_1808_90" [label="let _test: Int = 123",style=filled,fillcolor="#66A7DB"];
    }
}
